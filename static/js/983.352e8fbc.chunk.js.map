{"version":3,"file":"static/js/983.352e8fbc.chunk.js","mappings":"iOA0DA,UAtDiB,WACf,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAqBjB,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,sGAEnBN,GAAa,GAFM,UAIIO,EAAAA,EAAAA,MAJJ,OAIbC,EAJa,OAKbX,EAAQW,EAASC,QAEvBX,EAASD,GAPU,gDASnBK,EAAS,KAAMQ,SATI,yBAWnBV,GAAa,GAXM,4EAAH,qDAepBM,GACD,GAAE,KAGD,4BACE,eAAIK,UAAU,QAAd,4BACW,OAAVV,IACC,sFAA8DA,KAE/DF,GAAa,WACd,eAAIY,UAAU,WAAd,SACGd,EAAMe,OAAS,GACdf,EAAMgB,KAAI,SAAAC,GACR,OACE,eAAkBH,UAAU,WAA5B,UACE,UAAC,KAAD,CAAMI,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMf,GAA/C,WACE,gBACEgB,IAAG,6CAAwCL,EAAKM,aAChDC,IAAKP,EAAKQ,MACVC,MAAO,OAET,8BAAMT,EAAKQ,aAPNR,EAAKE,GAWjB,QAIV,C,8LCtDKQ,EAAW,+BACXC,EAAU,CACdC,QAAS,CACPC,cACE,6NACFC,OAAQ,qBAICrB,EAAkB,mCAAG,6GAEPsB,EAAAA,EAAAA,IAAA,UAClBL,EADkB,sCAErBC,GAJ4B,cAExBjB,EAFwB,yBAMvBA,EAASsB,MANc,gCAQ9BC,QAAQC,IAAR,MAR8B,yDAAH,qDAYlBC,EAAgB,mCAAG,WAAMC,GAAN,gGAELL,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAA+BU,GAAUT,GAFpC,cAEtBjB,EAFsB,yBAGrBA,EAASsB,MAHY,gCAK5BC,QAAQC,IAAR,MAL4B,yDAAH,sDAShBG,EAAS,mCAAG,WAAMD,GAAN,gGAEEL,EAAAA,EAAAA,IAAA,UAClBL,EADkB,kBACAU,EADA,YAErBT,GAJmB,cAEfjB,EAFe,yBAMdA,EAASsB,MANK,gCAQrBC,QAAQC,IAAR,MARqB,yDAAH,sDAYTI,EAAW,mCAAG,WAAMF,GAAN,gGAEAL,EAAAA,EAAAA,IAAA,UAClBL,EADkB,kBACAU,EADA,YAErBT,GAJqB,cAEjBjB,EAFiB,yBAMhBA,EAASsB,MANO,gCAQvBC,QAAQC,IAAR,MARuB,yDAAH,sDAYXK,EAAa,mCAAG,WAAMC,GAAN,gGAEFT,EAAAA,EAAAA,IAAA,UAClBL,EADkB,+BACac,GAClCb,GAJuB,cAEnBjB,EAFmB,yBAMlBA,EAASsB,MANS,gCAQzBC,QAAQC,IAAR,MARyB,yDAAH,qD","sources":["pages/HomePage.jsx","services/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchTrendingToday } from 'services/api';\n\nconst HomePage = () => {\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchFilmsData = async () => {\n      try {\n        setIsLoading(true);\n\n        const response = await fetchTrendingToday();\n        const films = response.results;\n\n        setFilms(films);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchFilmsData();\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"title\">Trending today</h1>\n      {error !== null && (\n        <p>Oops, some error occured. Please, try again later. Error: {error}</p>\n      )}\n      {isLoading && 'Loading'}\n      <ul className=\"filmList\">\n        {films.length > 0 &&\n          films.map(film => {\n            return (\n              <li key={film.id} className=\"filmItem\">\n                <Link to={`/movies/${film.id}`} state={{ from: location }}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/original${film.poster_path}`}\n                    alt={film.title}\n                    width={200}\n                  />\n                  <h3> {film.title}</h3>\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst options = {\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzODFiOTNjOWNiNzM1YjQ2YmZjNzYyYTU3YmMzMzg4OCIsInN1YiI6IjY0NzhkYTNlOWI2ZTQ3MDBhODVjOGUxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hNQAuTurNSvl2yPHE81cICxQcxaFUTSxDM-jR61Com4',\n    accept: 'application/json',\n  },\n};\n\nexport const fetchTrendingToday = async () => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?language=en-US`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchFilmDetails = async filmId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${filmId}`, options);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCast = async filmId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${filmId}/credits`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReview = async filmId => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${filmId}/reviews`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchFilmName = async name => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?query=${name}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useState","films","setFilms","isLoading","setIsLoading","error","setError","location","useLocation","useEffect","fetchFilmsData","fetchTrendingToday","response","results","message","className","length","map","film","to","id","state","from","src","poster_path","alt","title","width","BASE_URL","options","headers","Authorization","accept","axios","data","console","log","fetchFilmDetails","filmId","fetchCast","fetchReview","fetchFilmName","name"],"sourceRoot":""}