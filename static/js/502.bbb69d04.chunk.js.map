{"version":3,"file":"static/js/502.bbb69d04.chunk.js","mappings":"kOAkEA,UA7DiB,WACf,OAAsCA,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OA0BR,OArBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAa,mCAAG,sGAElBN,GAAa,GAFK,UAIKO,EAAAA,EAAAA,GAAUJ,GAJf,OAIZK,EAJY,OAKZC,EAAOD,EAASC,KAEtBX,EAAeW,GAPG,gDASlBP,EAAS,KAAMQ,SATG,yBAWlBV,GAAa,GAXK,4EAAH,qDAenBM,GAjBmB,CAkBpB,GAAE,CAACH,KAGF,2BACa,OAAVF,IACC,yBAAG,6DAA2DA,KAE/DF,IAAa,SAAC,IAAD,IACG,OAAhBF,IACC,eAAIc,UAAU,WAAd,SACGd,EAAYe,KAAI,SAAAC,GAAK,OACpB,2BACE,gBACEC,IACED,EAAME,aAAN,6CAC0CF,EAAME,cApC9D,8EAuCYC,MAAO,IACPC,IAAG,UAAKJ,EAAMK,KAAX,cAEL,wBACE,4BAASL,EAAMK,UAEjB,yBAAG,aAAWL,EAAMM,eAbbN,EAAMO,GADK,QAqB/B,C","sources":["pages/CastInfo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst CastInfo = () => {\n  const [castDetails, setCastDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { filmId } = useParams();\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  useEffect(() => {\n    if (!filmId) return;\n\n    const fetchCastData = async () => {\n      try {\n        setIsLoading(true);\n\n        const response = await fetchCast(filmId);\n        const cast = response.cast;\n\n        setCastDetails(cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCastData();\n  }, [filmId]);\n\n  return (\n    <div>\n      {error !== null && (\n        <p>Oops, some error occured. Please, try again later. Error: {error}</p>\n      )}\n      {isLoading && <Loader />}\n      {castDetails !== null && (\n        <ul className=\"filmList\">\n          {castDetails.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/original${actor.profile_path}`\n                    : defaultImg\n                }\n                width={250}\n                alt={`${actor.name} poster`}\n              />\n              <p>\n                <strong>{actor.name}</strong>\n              </p>\n              <p>Character {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default CastInfo;\n"],"names":["useState","castDetails","setCastDetails","isLoading","setIsLoading","error","setError","filmId","useParams","useEffect","fetchCastData","fetchCast","response","cast","message","className","map","actor","src","profile_path","width","alt","name","character","id"],"sourceRoot":""}